---
import TeamMemberPage from "@/components/Team/TeamMemberPage.astro";
import Layout from "@/layouts/Layout.astro";
import "@/styles/globals.css";
import type { TeamMember } from "@/types/TeamMember";
import { delay } from "@/utils/utils";

export async function getStaticPaths() {
  const builderAPIpublicKey = import.meta.env.BUILDER_API_PUBLIC_KEY;

  const isProduction = import.meta.env.PROD;

  if (isProduction) {
    // Force the delay of request to CMS to wait 30 seconds because CMS takes some seconds to refresh data.
    await delay(10000);
  }

  const { results } = await fetch(
    `https://cdn.builder.io/api/v3/content/team-members?apiKey=${builderAPIpublicKey}`,
  ).then((res) => res.json());

  const dataTeamMembers: TeamMember[] = results[0].data.teamMembers;

  const paths = dataTeamMembers.map((teamMember, index) => {
    return {
      params: { member: teamMember.teamMemberId },
      props: { teamMember, teamMemberIndex: index },
    };
  });

  return paths;
}

const teamMemberIndex: number = Astro.props.teamMemberIndex;
const teamMember: TeamMember = Astro.props.teamMember;
const { name, email, image, cpPt, formationsPt, preferencesAreaPt, rolePt } =
  teamMember;

const formations:
  | {
      formationItem: string;
    }[]
  | undefined = formationsPt?.map((formation) => {
  return { formationItem: formation.formationPtItem };
});

const preferencesArea:
  | {
      preferenceaAreaItem: string;
    }[]
  | undefined = preferencesAreaPt?.map((preferenceArea) => {
  return { preferenceaAreaItem: preferenceArea.preferenceaAreaItemPt };
});
---

<Layout revealNavbarOnScroll={false}>
  <TeamMemberPage
    name={name}
    email={email}
    image={image}
    cp={cpPt}
    formations={formations}
    preferencesArea={preferencesArea}
    role={rolePt}
    teamMemberIndex={teamMemberIndex}
  />
</Layout>
